on:
  workflow_dispatch:
  push:
jobs:
  list-test:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@main
      - id: set-matrix
        run: echo "matrix=$(ls test/*.c | jq -R -s -c 'split("\n")' | jq -c '.[0:-1]' | jq -c -r '.[] |= "\(.[0:index(".c")])"')" >> $GITHUB_OUTPUT
  build-and-test:
    name: Build ðŸ”§ & Test ðŸ”§
    needs: list-test
    strategy:
      matrix:
        target: ${{ fromJSON(needs.list-test.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up GCC
      uses: egor-tensin/setup-gcc@v1
      with:
        version: latest
        platform: x64
    - name: Setup Valgrind
      run: sudo apt install -y valgrind

    - name: Build ðŸ”§ ${{ matrix.target }}.c => ${{ matrix.target }}.out
      run: gcc -g -include ${{ matrix.target }}.h -include ./include/**.h ./include/**.c ${{ matrix.target }}.c -o ${{ matrix.target }}.out

    - name: Leak Test ðŸ”§ with valgrind ${{ matrix.target }}.out
      run: valgrind --leak-check=full ${{ matrix.target }}.out
